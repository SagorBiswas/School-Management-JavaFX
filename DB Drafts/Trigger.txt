
	CREATE OR REPLACE TRIGGER DELETED_STUDENTS
	BEFORE DELETE
	ON STUDENTS
	FOR EACH ROW
	DECLARE
	V_STUDENT_ID VARCHAR2(25);
	BEGIN
	V_STUDENT_ID := :OLD.STUDENT_ID ;
	DELETE FROM RESULT
	WHERE STUDENT_ID=V_STUDENT_ID;
	DELETE FROM FEES_PAYMENT
	WHERE STUDENT_ID=V_STUDENT_ID;
	DELETE FROM ATTENDS
	WHERE STUDENT_ID=V_STUDENT_ID;
	END ;
	/
	
	CREATE OR REPLACE TRIGGER DELETED_TEACHERS
	BEFORE DELETE
	ON TEACHERS
	FOR EACH ROW
	DECLARE
	V_TEACHER_ID VARCHAR2(25);
	BEGIN
	V_TEACHER_ID := :OLD.TEACHER_ID ;
	DELETE FROM CLASS
	WHERE TEACHER_ID=V_TEACHER_ID;

	END ;
	/
	
	CREATE OR REPLACE TRIGGER DELETED_FEES
	BEFORE DELETE
	ON FEES
	FOR EACH ROW
	DECLARE
	V_FEE_ID VARCHAR2(25);
	BEGIN
	V_FEE_ID := :OLD.FEE_ID ;
	DELETE FROM FEES_PAYMENT
	WHERE FEE_ID=V_FEE_ID;

	END ;
	/
	
	
//*****************************************************SAGOR BISWAS****************************************************	

	///DBMS PRACTISE
	CREATE OR REPLACE TRIGGER TESTING
	BEFORE DELETE
	ON EVENTS
	FOR EACH ROW
	DECLARE
	BEGIN
	DBMS_OUTPUT.PUT_LINE('HELLO');
	END ;
	/

	1.
	CREATE OR REPLACE TRIGGER DELETED_STUDENTS_LOG
		BEFORE DELETE
		ON STUDENTS
		FOR EACH ROW
	DECLARE
		V_NAME VARCHAR2(255);
		V_STATUS VARCHAR2(255);
		V_PROPERTY VARCHAR2(255);
		V_DESIGNATION VARCHAR2(255);
		V_ID VARCHAR2(255);
		V_DATETIME DATE;
	BEGIN
		V_NAME := :OLD.FIRST_NAME||' '||:OLD.LAST_NAME ;
		V_ID := :OLD.STUDENT_ID;
		V_STATUS := 'DELETED' ;
		V_DESIGNATION := 'STUDENT';
		V_PROPERTY := 'GRADE '||:OLD.GRADE;
		V_DATETIME := SYSDATE ;
		INSERT INTO LOG_TABLE VALUES (V_DESIGNATION, V_STATUS, V_ID, V_NAME, V_PROPERTY, V_DATETIME);
	END ;
	/
	
	2.
	CREATE OR REPLACE TRIGGER DELETED_TEACHERS_LOG
		BEFORE DELETE
		ON TEACHERS
		FOR EACH ROW
	DECLARE
		V_NAME VARCHAR2(255);
		V_STATUS VARCHAR2(255);
		V_PROPERTY VARCHAR2(255);
		V_DESIGNATION VARCHAR2(255);
		V_ID VARCHAR2(255);
		V_DATETIME DATE;
	BEGIN
		V_NAME := :OLD.FIRST_NAME||' '||:OLD.LAST_NAME ;
		V_ID := :OLD.TEACHER_ID;
		V_STATUS := 'DELETED' ;
		V_DESIGNATION := 'TEACHER';
		V_PROPERTY := 'SUB: '||:OLD.SUBJECT;
		V_DATETIME := SYSDATE ;
		INSERT INTO LOG_TABLE VALUES (V_DESIGNATION, V_STATUS, V_ID, V_NAME, V_PROPERTY, V_DATETIME);
	END ;
	/
	
	3.
	CREATE OR REPLACE TRIGGER DELETED_EMPLOYEES_LOG
		BEFORE DELETE
		ON EMPLOYEES
		FOR EACH ROW
	DECLARE
		V_NAME VARCHAR2(255);
		V_STATUS VARCHAR2(255);
		V_PROPERTY VARCHAR2(255);
		V_DESIGNATION VARCHAR2(255);
		V_ID VARCHAR2(255);
		V_DATETIME DATE;
	BEGIN
		V_NAME := :OLD.FIRST_NAME||' '||:OLD.LAST_NAME ;
		V_ID := :OLD.EMPLOYEE_ID;
		V_STATUS := 'DELETED' ;
		V_DESIGNATION := 'EMPLOYEE';
		V_PROPERTY := 'JOB: '||:OLD.JOB_TITLE;
		V_DATETIME := SYSDATE ;
		INSERT INTO LOG_TABLE VALUES (V_DESIGNATION, V_STATUS, V_ID, V_NAME, V_PROPERTY, V_DATETIME);
	END ;
	/




****************************************************danish update trigger *****************************************************************


	
//*****************************************************SAGOR BISWAS****************************************************	

	///DBMS PRACTISE
	CREATE OR REPLACE TRIGGER TESTING
	BEFORE DELETE
	ON EVENTS
	FOR EACH ROW
	DECLARE
	BEGIN
	DBMS_OUTPUT.PUT_LINE('HELLO');
	END ;
	/

	1.
	CREATE OR REPLACE TRIGGER UPDATED_STUDENTS_LOG
		BEFORE UPDATE
		ON STUDENTS
		FOR EACH ROW
	DECLARE
		V_NAME VARCHAR2(255);
		V_STATUS VARCHAR2(255);
		V_PROPERTY VARCHAR2(255);
		V_DESIGNATION VARCHAR2(255);
		V_ID VARCHAR2(255);
		V_DATETIME DATE;
	BEGIN
		V_NAME := :OLD.FIRST_NAME||' '||:OLD.LAST_NAME ;
		V_ID := :OLD.STUDENT_ID;
		V_STATUS := 'UPDATED' ;
		V_DESIGNATION := 'STUDENT';
		V_PROPERTY := 'GRADE '||:OLD.GRADE;
		V_DATETIME := SYSDATE ;
		INSERT INTO LOG_TABLE VALUES (V_DESIGNATION, V_STATUS, V_ID, V_NAME, V_PROPERTY, V_DATETIME);
	END ;
	/
	
	2.
	CREATE OR REPLACE TRIGGER UPDATED_TEACHERS_LOG
		BEFORE UPDATE
		ON TEACHERS
		FOR EACH ROW
	DECLARE
		V_NAME VARCHAR2(255);
		V_STATUS VARCHAR2(255);
		V_PROPERTY VARCHAR2(255);
		V_DESIGNATION VARCHAR2(255);
		V_ID VARCHAR2(255);
		V_DATETIME DATE;
	BEGIN
		V_NAME := :OLD.FIRST_NAME||' '||:OLD.LAST_NAME ;
		V_ID := :OLD.TEACHER_ID;
		V_STATUS := 'UPDATED' ;
		V_DESIGNATION := 'TEACHER';
		V_PROPERTY := 'SUB: '||:OLD.SUBJECT;
		V_DATETIME := SYSDATE ;
		INSERT INTO LOG_TABLE VALUES (V_DESIGNATION, V_STATUS, V_ID, V_NAME, V_PROPERTY, V_DATETIME);
	END ;
	/
	
	3.
	CREATE OR REPLACE TRIGGER UPDATED_EMPLOYEES_LOG
		BEFORE UPDATE
		ON EMPLOYEES
		FOR EACH ROW
	DECLARE
		V_NAME VARCHAR2(255);
		V_STATUS VARCHAR2(255);
		V_PROPERTY VARCHAR2(255);
		V_DESIGNATION VARCHAR2(255);
		V_ID VARCHAR2(255);
		V_DATETIME DATE;
	BEGIN
		V_NAME := :OLD.FIRST_NAME||' '||:OLD.LAST_NAME ;
		V_ID := :OLD.EMPLOYEE_ID;
		V_STATUS := 'UPDATED' ;
		V_DESIGNATION := 'EMPLOYEE';
		V_PROPERTY := 'JOB: '||:OLD.JOB_TITLE;
		V_DATETIME := SYSDATE ;
		INSERT INTO LOG_TABLE VALUES (V_DESIGNATION, V_STATUS, V_ID, V_NAME, V_PROPERTY, V_DATETIME);
	END ;
	/



*****************************************************DANISH TRIGER INSERT **********************************************************
	
	
//*****************************************************SAGOR BISWAS****************************************************	

	///DBMS PRACTISE
	CREATE OR REPLACE TRIGGER TESTING
	BEFORE DELETE
	ON EVENTS
	FOR EACH ROW
	DECLARE
	BEGIN
	DBMS_OUTPUT.PUT_LINE('HELLO');
	END ;
	/

	1.
	CREATE OR REPLACE TRIGGER INSERTED_STUDENTS_LOG
		AFTER INSERT
		ON STUDENTS
		FOR EACH ROW
	DECLARE
		V_NAME VARCHAR2(255);
		V_STATUS VARCHAR2(255);
		V_PROPERTY VARCHAR2(255);
		V_DESIGNATION VARCHAR2(255);
		V_ID VARCHAR2(255);
		V_DATETIME DATE;
	BEGIN
		V_NAME := :NEW.FIRST_NAME||' '||:NEW.LAST_NAME ;
		V_ID := :NEW.STUDENT_ID;
		V_STATUS := 'INSERTED' ;
		V_DESIGNATION := 'STUDENT';
		V_PROPERTY := 'GRADE '||:NEW.GRADE;
		V_DATETIME := SYSDATE ;
		INSERT INTO LOG_TABLE VALUES (V_DESIGNATION, V_STATUS, V_ID, V_NAME, V_PROPERTY, V_DATETIME);
	END ;
	/
	
	2.
	CREATE OR REPLACE TRIGGER INSERTED_TEACHERS_LOG
		AFTER INSERT
		ON TEACHERS
		FOR EACH ROW
	DECLARE
		V_NAME VARCHAR2(255);
		V_STATUS VARCHAR2(255);
		V_PROPERTY VARCHAR2(255);
		V_DESIGNATION VARCHAR2(255);
		V_ID VARCHAR2(255);
		V_DATETIME DATE;
	BEGIN
		V_NAME := :NEW.FIRST_NAME||' '||:NEW.LAST_NAME ;
		V_ID := :NEW.TEACHER_ID;
		V_STATUS := 'INSERTED' ;
		V_DESIGNATION := 'TEACHER';
		V_PROPERTY := 'SUB: '||:NEW.SUBJECT;
		V_DATETIME := SYSDATE ;
		INSERT INTO LOG_TABLE VALUES (V_DESIGNATION, V_STATUS, V_ID, V_NAME, V_PROPERTY, V_DATETIME);
	END ;
	/
	
	3.
	CREATE OR REPLACE TRIGGER INSERTED_EMPLOYEES_LOG
		AFTER INSERT
		ON EMPLOYEES
		FOR EACH ROW
	DECLARE
		V_NAME VARCHAR2(255);
		V_STATUS VARCHAR2(255);
		V_PROPERTY VARCHAR2(255);
		V_DESIGNATION VARCHAR2(255);
		V_ID VARCHAR2(255);
		V_DATETIME DATE;
	BEGIN
		V_NAME := :NEW.FIRST_NAME||' '||:NEW.LAST_NAME ;
		V_ID := :NEW.EMPLOYEE_ID;
		V_STATUS := 'INSERTED' ;
		V_DESIGNATION := 'EMPLOYEE';
		V_PROPERTY := 'JOB: '||:NEW.JOB_TITLE;
		V_DATETIME := SYSDATE ;
		INSERT INTO LOG_TABLE VALUES (V_DESIGNATION, V_STATUS, V_ID, V_NAME, V_PROPERTY, V_DATETIME);
	END ;
	/




